{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","style","cursor","onClick","bind","float","color","Link","to","marginRight","Contacts","Fragment","Contact_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","basename","process","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.345cee5d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => {\n      this.setState(state => reducer(state, action));\n    }\n  };\n\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { Consumer } from \"../../context\";\nimport \"./contact.css\";\nimport axios from \"axios\";\n\nexport default class Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onShowClick = () => {\n    this.setState({\n      showContactInfo: !this.state.showContactInfo\n    });\n  };\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    } catch (e) {\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    }\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}\n                <i\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                  onClick={this.onShowClick}\n                />\n                <i\n                  className=\"fas fa-times\"\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      color: \"black\",\n                      marginRight: \"1rem\"\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\n\nexport default class Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\n// pass props as object in a const variable\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error //dynamic css binding with classnames module\n        })}\n        placeholder={placeholder}\n        name={name}\n        value={value}\n        onChange={onChange}\n      />\n      {/* if submit is incomplete/invalid, show error  */}\n      {error && <div className=\"invalid-feedback\"> {error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string //error is not required\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\n// import uuid from \"uuid\";\nimport axios from \"axios\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\n\nexport default class AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault(); //prevents form from refreshing on submit\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const newContact = {\n      // id: uuid(), //gives each id a random and unique id from uuid module\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n    //clear state on submit\n    this.setState({ name: \"\", email: \"\", phone: \"\" });\n    // sends back to Home on form submit\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\n// import uuid from \"uuid\";\nimport axios from \"axios\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\n\nexport default class EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault(); //prevents form from refreshing on submit\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n\n    //clear state on submit\n    this.setState({ name: \"\", email: \"\", phone: \"\" });\n    // sends back to Home on form submit\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"My App\"\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\n\nexport default function About() {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n\n      <p className=\"text-secondary\">version 1.1</p>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">404 Page Not Found</h1>\n      <p className=\"lead\">uh oh, that page does not exist.</p>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\n\nexport default class Test extends Component {\n  state = {\n    title: \"\",\n    body: \"\"\n  };\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\n      .then(response => response.json())\n      .then(data => this.setState({ title: data.title, body: data.body }));\n  }\n\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\nimport { Provider } from \"./context\"; //ContextAPI\nimport \"bootstrap/dist/css/bootstrap.min.css\"; //using Bootstrap CSS only\n\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      // ContextAPI is a higher order component\n      <Provider>\n        {/* Router should always be below ContextAPI */}\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            {/* Component (Header/Nav) that will be displayed on all pages */}\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                {/* Routes to pages */}\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}